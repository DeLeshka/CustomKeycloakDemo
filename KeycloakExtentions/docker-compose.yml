version: '3.9'
volumes:
  kc_data:
    name: keycloak-extensions-demo-data
  my-postgres-data:
    name: my-postgres-data
services:
  keycloak-postgres:
    image: library/postgres:${KC_POSTGRES_IMAGE_TAG:-14}
    container_name: ${POSTGRES_CONTAINER_NAME:-postgres}
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: pg_isready -d postgres
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - '5432:5432'
    deploy:
      resources:
        limits:
          memory: 256M
    volumes:
      - my-postgres-data:/var/lib/postgresql/data

  keycloak:
    container_name: keycloak-extensions-demo
    image: quay.io/keycloak/keycloak:22.0.5
    restart: always
    command:
      - start --auto-build --db postgres --hostname-strict-https false --hostname-strict false --proxy edge --http-enabled true --import-realm
    environment:
      DEBUG: 'true'
      DEBUG_PORT: '*:8787'
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/postgres
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: postgres
      KC_DB_SCHEMA: public
      KC_FEATURES: preview
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - '8080:8080'
      - '8787:8787'
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:8080/realms/master" ]
      start_period: 10s
      interval: 30s
      retries: 3
      timeout: 5s
    volumes:
      - kc_data:/opt/keycloak/data
      - ./CustomRestEndpoint/target/ru.akondrikov-CustomRestEndpoint.jar:/opt/keycloak/providers/CustomRestEndpoint.jar